{
  "displayName": "ServicesType policy",
  "description": "Policy for the package servicestype",
  "rawPolicy": "package servicestype\n\ndefault allow := true\n\nservicesTypeEnum := {\"rest-services\", \"streaming-services\", \"datastore-services\"}\nrestServices := [ outputPort.promises | outputPort := input.interfaceComponents.outputPorts[_]; outputPort.promises.servicesType == \"rest-services\" ]\nstreamingServices := [ outputPort.promises | outputPort := input.interfaceComponents.outputPorts[_]; outputPort.promises.servicesType == \"streaming-services\" ]\ndatastoreServices := [ outputPort.promises | outputPort := input.interfaceComponents.outputPorts[_]; outputPort.promises.servicesType == \"datastore-services\" ]\nasyncapiSpecServices := [ promise.api.definition | promise := streamingServices[_]; promise.api.specification == \"asyncapi\"]\n\nallow := false {\n    count([ outputPort.promises.servicesType | outputPort := input.interfaceComponents.outputPorts[_]; not servicesTypeEnum[outputPort.promises.servicesType] ]) > 0\n}\n\nallow := false {\n\tcount([ serv | serv := restServices[_]; serv.api.specification != \"openapi\" ]) > 0\n}\n\nallow := false {\n\tcount([ serv | serv := streamingServices[_]; serv.api.specification != \"asyncapi\" ]) > 0\n}\n\nallow := false {\n\tcount([ serv | serv := datastoreServices[_]; serv.api.specification != \"datastoreapi\" ]) > 0\n}\n\nallow := false {\n\tcount([ def | def := asyncapiSpecServices[_]; def.specification != \"cloud-events\"]) > 0\n}\n"
}